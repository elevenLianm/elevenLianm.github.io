<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CSS(下)]]></title>
    <url>%2F2019%2F04%2F22%2F%E5%AD%A6%E4%B9%A0%2F%E5%89%8D%E7%AB%AF%2FCSS(%E4%B8%8B)%2F</url>
    <content type="text"><![CDATA[CSS相关的知识点总结CSS相关知识的总结（下） 盒子模型（CSS重点） CSS就三大模块，盒子模型、浮动、定位，其余都是细节。要求这三部分，无论如何也要学的精通。所谓盒子模型就是把HTML页面中的元素看做是一个矩形盒子，也就是一个盛装内容的容器，每个矩形都由元素内容、内边距(padding)、边框(border)、外边距(margin)组成。网页布局本质：把网页元素比如文字图片等等，放入盒子里面，然后利用CSS白方盒子的过程，就是网页布局。 盒子模型（Box Model） 所有文档元素（标签）都会生成一个矩形框，我们称为元素框，它描述了一个文档元素（标签）在网页布局所占的位置大小。因此，每个盒子除了有自己大小位置外，还影响着其他盒子的大小位置。 盒子边框（border）语法：1border: border-width || border-style || border-color 边框属性——设置边框样式（border-style）边框样式用于定义页面中边框风格，常用属性值如下： none：没有边框即忽略所有边框的宽度（默认值） solid：边框为单实线（最为常用） dashed：边框为虚线 dotted：边框为点线 double：边框为双实线 盒子边框写法总结表 设置内容 样式属性 常用属性值 上边框 border-top-style:样式;border-top-width:宽度;border-top-color:颜色;border-top:宽度 样式 颜色; 下边框 border-bottom-style:样式;border-bottom-width:宽度;border-bottom-color:颜色;border-bottom:宽度 样式 颜色; 左边框 border-left-style:样式;border-left-width:宽度;border-left-color:颜色;border-left:宽度 样式 颜色; 右边框 border-top-style:样式;border-top-width:宽度;border-top-color:颜色;border-top:宽度 样式 颜色; 样式综合设置 border-style:上边 [右边 下边 左边] none无（默认）、solid单实线、dashed虚线、dotted点线、double双实线 样式综合设置 border-width:上边 [右边 下边 左边] 像素值 样式综合设置 border-color:上边 [右边 下边 左边] 颜色值、#十六进制、rgb(r,g,b)、rgb(r%,g%,b%) 样式综合设置 border:四边框度 四边样式 四边颜色 表格的细边框以前学过的html表格边框很粗，这里只需CSS一句话就可以美观起来。12table&#123;border-collapse:collapse;&#125;表示边框合并在一起。collapse：合并 圆角边框（CSS3）radius 半径（距离）语法格式：1border-radius: 左上角 右上角 右下角 左下角。 内边距（padding） padding属性用于设置内边距。指边框与内容之间的距离。padding-top:上内边距padding-right:右内边距padding-bottom:下内边距padding-left:左内边距padding:上边距 右边距 下边距 左边距注意：后面跟几个数值表示的意思不一样 值的个数 表达意思 1个值 padding:上下左右边距 比如padding:3px;表示上下左右都是3像素 2个值 padding:上下边距 左右边距 比如padding:3px 5px;表示上下边距3像素 左右边距5像素 3个值 padding:上边距 左右边距 下边距 比如padding:3px 5px 3px;表示上边距3px 左右边距 5px 下边距3像素 4个值 padding:上边距 右边距 下边距 左边距 比如padding:3px 5px 10px 15px;表示上3px右5px下10px左15px顺时针 外边距（margin） margin属性用于设置外边距。设置外边距会在元素之间创建“空白”，这段空白通常不能放置其他内容。margin-top:上外边距margin-right:右外边距margin-bottom:下外边距margin-left:左外边距margin:上边距 右边距 下边距 左边距取值顺序与内边距相同。 外边距实现盒子居中 可以让一个盒子实现水平居中，需要满足以下两个条件： 必须是块级元素 盒子必须制定了宽度（width） 然后就给左右的外边距都设置为auto，就可以使块级元素水平居中。 实际工作中经常使用这种方式进行网页布局，示例代码如下：1.header &#123;width:960px; margin:0 auto&#125; 清除元素默认的内外边距为了更方便地控制网页中的元素，制作网页时，可以使用如下代码清除元素的默认内外边距：1234* &#123; padding:0; margin:0;&#125; 注意：行内元素是只有左右内外边距的，是没有上下内外边距的。 外边距合并 使用margin定义块元素的垂直外边距时，可能会出现外边距合并。 相邻块元素垂直外边距的合并 当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom，下面的元素有上外边距margin-top，他们之间的垂直间距不是margin-bottom和margin-top之和，而是两者中的较大者。这种现象被称为相邻块元素垂直外边距的合并（也称为外边距塌陷）。 嵌套块元素垂直外边距的合并 对于两个嵌套关系的块元素，如果父元素没有上内边距及边框，则父元素的上外边距会与子元素的上外边距发生合并，合并后的外边距为两者中的较大者，即使父元素的上外边距为0，也会发生合并。/n.png)解决方案： 可以为父元素定义1像素的上边框或上内边距。 可以为父元素添加overflow:hidden。 content宽度和高度 使用宽度属性width和高度属性height可以对盒子的大小进行控制。width和height的属性值可以为不同单位的数值或相对于父元素的百分比%，实际工作中最常用的是像素值。大多数浏览器，如Firefox、IE6及以上版本都采用了W3C规范，符合CSS规范的盒子模型的 总宽度和总高度的计算原则是：123456/*外盒尺寸计算（元素空间尺寸）*/Element空间高度 = content height + padding + border + marginElement 空间宽度 = content width + padding + border + margin/*内盒尺寸计算（元素实际大小）*/Element Height = content height + padding + border （Height为内容高度）Element Width = content width + padding + border （Width为内容宽度） 注意： 1、宽度属性width和高度属性height仅适用于块级元素，对行内元素无效（ img 标签和 input除外）。 2、计算盒子模型的总高度时，还应考虑上下两个盒子垂直外边距合并的情况。 3、如果一个盒子没有给定宽度/高度或者继承父亲的宽度/高度，则padding 不会影响本盒子大小。]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS(上)]]></title>
    <url>%2F2019%2F04%2F16%2F%E5%AD%A6%E4%B9%A0%2F%E5%89%8D%E7%AB%AF%2FCSS(%E4%B8%8A)%2F</url>
    <content type="text"><![CDATA[CSS相关的知识点总结CSS相关知识的总结（上） CSS样式规则123选择器 &#123; 属性:值;&#125; CSS字体样式属性font-size:字体大小 作用：设置自字号，推荐使用像素单位px123h1&#123; font-size:14px;&#125; font-family:字体 作用：设置字体，常用字体有：宋体、微软雅黑、黑体等可以指定多个字体，中间以逗号隔开，表示如果浏览器不支持第一个字体，则会尝试下一个，直到找到合适的字体。123p&#123; font-family: Tahoma, Arial, "Hiragino Sans GB", "Microsoft Sans Serif";&#125; 常用技巧 现在网页普遍使用14px+。 尽量使用偶数的数字字号，ie6等老式浏览器奇数字体有bug。 中文字体需要加英文引号，英文字体一般不需要加引号。当需要设置英文字体时候，英文字体名必须位于中文字体名前。 如果字体名包含空格、#、$等符号，则该字体需加英文状态下的单引号或双引号，例如：font-family:”Times New Roman”; 尽量使用系统默认字体，保证任何用户的浏览器中都能正确显示。 Unicode字体 在CSS中设置字体名称，直接写中文是可以的。但在文件编码（GB2312、UTF-8等）不匹配时会产生乱码错误。xp系统不支持类似微软雅黑的中文。方案一：使用英文替代。如：font-family: &quot;Microsoft Yahei&quot;;方案二：在CSS直接使用Unicode编码写字体名称可以避免这些错误。使用Unicode写中文字体名称，浏览器是可以正确解析的。font-family: &quot;\5FAE\8F6F\96C5\9ED1&quot;;表示设置字体为“微软雅黑”。注意：尽量只写Unicode字体，且字体选择黑体/微软雅黑 font-weight:字体粗细 作用：定义字体粗细，可用属性值：normal、bold、bolder、lighter、100-900（100的整数倍）。注：400等价于normal，700等价于bold，一般常用数字表示。注2：在strong标签使用该样式可以将字体不加粗。 font-style:字体风格 作用：设置字体文本样式，normal是正常文本样式，italic是斜体文本样式。注2：在em标签使用该样式可以将字体不倾斜。 font:综合设置字体样式（重点） font属性用于对字体样式进行综合设置，语法格式如下：1选择器 &#123;font: font-style font-weight font-size/line-height font-family&#125; 使用font属性时，必须按照如上格式的顺序书写，不能更换顺序，各属性以空格隔开。注：不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font属性不起作用。 示例：1font: italic bold 14px "\5FAE\8F6F\96C5\9ED1"; 选择器（重点）标签选择器（元素选择器） 指以HTML标签名作为选择器，按标签分类，给页面某一类标签指定统一的css样式。基本语法格式如下：12标签名 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125; 或者元素名 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125; 类选择器 类选择器使用”.”进行标识，后面紧跟类名标签调用class=”类名”即可 基本语法如下：1.类名 &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125; 命名规范 长名称或词组用中横线命名。 不建议用”_”来命名CSS选择器。 不要用纯数字、中文命名。 多类名选择器 可以给一个HTML标签添加多个类名样式显示效果与HTML元素中类名先后顺序无关，受CSS样式书写的上下顺序有关各类名剑以空格隔开 id选择器 id选择器使用”#”进行标识，后面跟id名。 基本语法格式如下：1#id &#123;属性1:属性值1;属性2:属性值2;属性3:属性值3&#125; 大多数HTML元素都有id属性，元素id值唯一。 id选择器和类选择器区别 同一页面，不允许有相同名字的id对象出现，但是允许相同名字的class。 通配符选择器 通配符选择器用“*”表示，它是所有选择器中作用范围最广的。能匹配页面中所有元素。 基本格式如下：1* &#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3;&#125; 例如下面的代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。1* &#123;margin:0; padding:0;&#125; 伪类选择器 首先，这也是个选择器，伪类选择器用于向某些选择器添加特殊效果。比如给链接添加特殊效果，比如可以选择第1个、第n个元素。伪类选择器才用两个点，即冒号表示，比如 :link() 链接伪类选择器 :link 未访问的链接 :visited 已访问的链接 :hover 鼠标移动到链接上 :active 选定的链接（鼠标点击不松开） 以上顺序书写时不能颠倒 结构（位置）伪类选择器（CSS3） :first-child：选取属于其父元素的首个子元素的指定选择器 :last-child：选取属于其父元素的最后一个子元素的指定选择器 :nth-child(n)：匹配属于其父元素的第N个子元素，不论元素的类型。even表示偶数 ，odd表示奇数，用公式n从0开始 :nth-last-child(n)：匹配属于其父元素的第N个子元素的每一个元素，不论元素的类型 从最后一个子元素开始计数。 注意：其中以上的n可以是数字、关键词或公式。例如：even表示偶数,odd表示奇数，用公式n从0开始,2n是2的倍数，2，3n是3的倍数，0表示不选择 结构伪类选择器的坑1234567891011&lt;!--代码块1--&gt; &lt;style&gt; p:first-child &#123; background-color: bisque; &#125; &lt;/style&gt;&lt;body&gt;&lt;h4&gt;测试&lt;/h4&gt;&lt;p&gt;测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试&lt;/p&gt;&lt;p&gt;测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试&lt;/p&gt;&lt;/body&gt; 1234567891011&lt;!--代码块2--&gt; &lt;style&gt; p:first-child &#123; background-color: bisque; &#125; &lt;/style&gt;&lt;body&gt;&lt;p&gt;测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试&lt;/p&gt;&lt;h4&gt;测试&lt;/h4&gt;&lt;p&gt;测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试&lt;/p&gt;&lt;/body&gt; 在上述代码块1的情况下，:first-child不会起作用。将代码修改为代码块2后:first-child生效。原因： :first-child 如果父元素的第一个元素不是寻找的标签的话，会不起作用。:last-child、:nth-child(n)、:nth-last-child(n)此三个同理。 :first-child、:last-child、:nth-child(n)、:nth-last-child(n)实际是将父元素中所有子元素（不只是冒号前的元素所属种类）按序排列。然后选出给定位置的元素，如果该元素与冒号前元素种类一致，则改变样式。否则不改变样式。 因此，对于父元素内复杂排序的不同元素我们可以选择使用:1:first-of-type、:last-of-type、:nth-of-type(n)、:nth-last-of-type(n)。 这四种伪类选择器与上述唯一不同的是他们是将父元素中与冒号前元素相同类型的元素筛选出来排序，然后定位修改样式。可以有效避免代码块1的情况 目标伪类选择器 :target目标伪类选择器：选择可用于选取当前活动的目标元素 CSS外观属性color：文本颜色 用于定义文本的颜色，取值方式有如下三种： 预定义的颜色值，如red，green，blue等。 十六进制，如#FF0000，#FF6600等，实际工作中，十六进制是最常用的定义颜色的方式。 RGB代码，如红色可以表示为rgb(255，0，0)或rgb(100%，0%，0%)。 line-height:行间距 用于设置行间距，就是行与行之间的距离，即字符的垂直距离，一般称为行高。line-height常用属性值单位有三种，分别为像素px，相对值em和百分比%，实际工作中更多使用px。一般行高比字号大7、8像素即可。 text-align:水平对齐 用于设置文本内容的水平对齐方式，相当于html中的align对齐属性。其可用属性如下：left：左对齐（默认值）center：居中right：右对齐 text-indent:首行缩进 text-indent属性用于设置首行文本的缩进，其属性值可为不同单位的数值、em字符宽度的倍数、或相对于浏览器宽度的百分比%，允许负值，建议使用em作为设置单位。此处建议使用em。em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。扩展：rem单位。它同样也是相对长度单位。但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。 除了IE8及更早版本外，所有浏览器均已支持rem。对于不支持它的浏览器，应对方法也很简单，就是多写一个绝对单位的声明。这些浏览器会忽略用rem设定的字体大小。 letter-spacing:字间距 letter-spacing属性用于定义字间距，所谓字间距就是字符与字符之间的空白。其属性值可为不同单位，允许使用负值，默认为normal。 word-spacing:单词间距 word-spacing属性用于定义英文单词之间的间距，对中文字符无效。和letter-spacing一样，其属性值可为不同单位的数值，允许使用负值，默认为normal。word-spacing和letter-spacing均可对英文进行设置。不同的是letter-spacing定义的为字母之间的间距，而word-spacing定义的为英文单词之间的间距。 颜色半透明（CSS3） 文字颜色到了CSS3可以采取半透明格式，语法如下： 1color:rgba(r,g,b,a) a是alpha 透明的意思 color:rgba(0,0,0,0.3) a取值范围在0~1之间，4个参数都不能省略 文字阴影（CSS3）1text-shadow:水平位置 垂直位置 模糊距离 阴影颜色; 值 描述 h-shadow 必须。水平阴影的位置。允许负值。 v-shadow 必须。垂直阴影的位置。允许负值。 blur 可选。模糊的距离。 color 可选。阴影颜色。 引入CSS样式表行内式（内联样式） 通过标签的style来设置元素样式，其基本语法格式如下：1&lt;标签名 style="属性: 属性值1;属性: 属性值2;属性: 属性值3;"&gt;内容&lt;/标签名&gt; 内部样式表（内嵌式） 内嵌式是将CSS代码集中写在HTML文档的head头部标签中，并用style标签定义，基本格式如下：12345&lt;head&gt;&lt;style type="text/css"&gt;&lt;标签名 style="属性: 属性值1;属性: 属性值2;属性: 属性值3;"&gt;内容&lt;/标签名&gt;&lt;/style&gt;&lt;/head&gt; 语法中，style标签一般位于head标签中title标签之后，也可以把他放在HTML文档的任何地方。 外部样式表（外链式）链入式是将所有的样式放在一个或多个以css为扩展名的外部样式表文件中，通过link标签将外部样式表文件链接到HTML文档中，其基本语法如下：123&lt;head&gt;&lt;link href="CSS文件路径" type="text/css" rel="stylesheet"/&gt;&lt;/head&gt; link 标签必须要放在head头部标签，并且必须指定link标签的三个属性，具体如下： href：定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。 type：定义所链接文档的类型，在这里需要指定为”text/css”，表示链接的外部文件为CSS样式表。(可省略) rel：定义当前文档与被链接文档之间的关系，在这里指定为“stylesheet”，表示被链接的文档是一个样式表文件。 三种样式表总结 样式表 优点 缺点 使用情况 控制范围 行内样式表 书写方便，权重高 没有实现样式与结构分离 较少 控制一个标签（少） 内嵌样式表 部分结构和样式分离 没有彻底分离 较多 控制一个页面（中） 外部样式表 完全实现结构和样式的分离 需要引入 最多，强烈推荐 控制整个站点（多） 标签的显示模式（display）块级元素（block-level） 每个块元素通常会独占一整行或多行，可以对其设置宽度、高度、对齐等属性，常用于网页布局和网页结构的搭建。1常见的块级元素有：&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等，其中&lt;div&gt;标签是最经典的块元素。 特点： 总是从新行开始。 宽度默认是容器的100% 可以容纳内联元素和其他块元素。 高度、行高、外边距、内边距都可以控制。 行内元素（inline-level） 行内元素（内联元素）不占有独立的区域，仅靠自身的字体大小、图像尺寸来支撑结构，一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。1常见的块级元素有：&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中&lt;span&gt;标签是最经典的行内元素。 特点： 和相邻行内元素在一行上 高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。 默认宽度就是它本身内容的宽度。 行内元素只能容纳文本或者其他行内元素。(&lt;a&gt;特殊) 注意 只有文字才能组成段落，因此p标签里面不能放块级元素，同理还有h1~h6、dt 链接里面不能再放链接 行内块元素（inline-block） 在行内元素中有几个特殊标签——&lt; img /&gt;、&lt;input /&gt;、&lt;td&gt;,可以对它们设置宽高和对齐属性，有些资料可能会称为行内块元素。 行内块元素特点： 和相邻行内元素（行内块元素）在一行上，但之间有空白间隙。 默认宽度就是它本身内容的宽度。 高度、行高、内外边距都可以控制。 标签显示模式转换 display 块转行内：display:inline行内转块：display:block块、行内元素转换为行内块元素：display:inline-block CSS复合选择器 复合选择器是由两个或以上个基础选择器，通过不同方式组合而成，目的是为了可以选择更准确更精细的目标元素标签。 交集选择器 交集选择器由两个选择器构成，其中第一个为标签选择器，第二个为类选择器，两个选择器之间不能有空格，如：h3.special1h3.class &#123; color: red; font-size: 25px; &#125; 用的相对来说比较少，不建议使用。 并集选择器 并集选择器（css选择器分组）是各个选择器通过逗号连接而成，任何形式的选择器都可以作为并集选择器的一部分，如果某些选择器定义的样式完全相同，或部分相同，就可以利用并集选择器为他们定义相同的CSS样式。1.class,h3 &#123; color:red; font-size:25px; &#125; 后代选择器 后代选择器又称为包含选择器，用来选择元素或元素组的后代，其写法就是把外层标签写在前面，内层标签写在后面，中奖用空格分隔，当标签发生嵌套时，内层标签就成为外层标签的后代。1.class h3 &#123; color:red; font-size:25px; &#125; 子孙后代都可以选择，它能选择任何包含在内的标签。 子元素选择器 子元素选择器只能作为某元素子元素的元素。其写法就是把父级标签写在前面，子级标签写在后面，中间跟一个&gt;进行连接，注意，符号左右两侧各保留一个空格。1.class &gt; h3 &#123; color:red; font-size:25px &#125; 白话：这里的子指的是亲儿子，不好喊孙子重孙子之类。比如：.demo&gt;h3{color:red;}说明h3一定是.demo亲儿子。demo元素包含着h3。 属性选择器 选择器 示例 含义 E[attr] 存在attr属性即可 E[attr=val] 属性值完全等于val E[attr*=val] 属性值里包含val字符且在任意位置 E[attr^=val] 属性值里包含val字符且在开始位置 E[attr$=val] 属性值里包含val字符且在结束位置 伪元素选择器（CSS3） E::firstletter文本的第一个单词或字（如中文、日文、韩文等） E::first-line文本第一行； E::selection 可改变鼠标拖动选中文本的样式； E::before和E::after在E元素内部开始位置和结束位置创建一个元素，该元素为行内元素，且必须结合content属性使用。123456E::befor &#123; content:"开始"；&#125;E::after &#123; content:"结束"；&#125; CSS背景（background） CSS可以添加背景颜色和背景图片，以及来进行图片设置。 background-color 背景颜色 background-image 背景图片地址 background-repeat 是否平铺 background-position 背景位置 background-attachment 背景固定还是滚动 背景的合写（复合属性） background: 背景颜色 背景图片地址 背景平铺 背景滚动 背景位置 背景（image）1background-image: url("图片链接")； 背景平铺（repeat） background-repeat取值： repeat（默认） no-repeat（不平铺） repeat-x（横向平铺） repeat-y（纵向平铺） 背景位置（position） background-position 取值： length：百分数|由浮点数和单位标识符组成的长度值。 position：top|center|bottom|left|center|right 说明： 设置或检索对象的背景图像位置。必须先指定background-image属性。默认值为：(0%,0%)。如果只指定了一个值，该值用于横坐标。纵坐标将默认为50%。第二个值将用于纵坐标。 注意： position后面是x坐标和y坐标。可以使用方位名词或者精确单位。 如果精确单位和方位名词混用，必须x坐标在前，y坐标在后。例如：background-position:15px top; top是y坐标 背景固定（attachment）1background-attachment: scroll | fixed 参数：scroll：背景图像是随对象内容滚动fixed：背景图像固定说明：设置或检索背景图像是随着内容滚动还是固定的。 背景书写 background属性的值书写顺序没有强制标准。为了可读性，建议如下写：background: 背景颜色 背景图片地址 背景平铺 背景滚动 背景位置background: transparent url(“image.jpg”) no-repeat fixed 50% 0; 背景透明（CSS3） CSS3支持背景半透明的写法格式是：1background:rgba(0,0,0,0.3); 最后一个参数是alpha透明度 取值范围 0~1之间注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响。同样，可以给文字和边框透明，都是rgba的格式来写。 背景缩放（CSS3） 通过background-size设置背景图片尺寸，就像设置img的尺寸一样，在移动Web开发中做屏幕适配应用非常广泛。其参数设置如下： 可以设置长度单位（px）或百分比（设置百分比时，参照盒子宽高） 设置为cover时，会自动调整缩放比例，保证图片始终填充满背景区域，如有溢出则会被隐藏。 设置为contain会自动调整缩放比例，保证图片始终完整显示在背景区域。12background-image:url("图片地址")；background-size: 300px 100px; 多背景（CSS3） 以逗号分隔可以设置多背景，可用于自适应布局，做法是用逗号隔开。 一个元素可以设置多背景图像。 每组属性间使用逗号分隔。 如果设置的多重背景图之间存在交集（即存在着重叠关系），前面的背景图会覆盖后面的背景图之上。为了避免背景色将图像遮住，背景色通常都定义在最后一组上。1234background:url(test1.jpg) no-repeat scroll 10px 20px/50px 60px,url(test1.jpg) no-repeat scroll 10px 20px/70px 90px,url(test1.jpg) no-repeat scroll 10px 20px/110px 130px,#aaa; 文字凹凸效果123456789101112/*凹陷文字：左上是黑色阴影，右下是白色阴影*/.ao&#123; color: #cccccc; text-shadow: 1px 1px 1px white, -1px -1px 1px black;&#125;/*凸起文字：左上是白色阴影，右下是黑色阴影*/.to&#123; color: #cccccc; text-shadow: 1px 1px 1px black, -1px -1px 1px white;&#125; 导航栏案例文本修饰 text-decoration 通常用于修改链接装饰效果 值 描述 none 默认。定义标准的文本 underline 定义文本下的一条线。 overline 定义文本上的一条线。 line-through 定义穿过文本下的一条线。 使用技巧：在一行内的盒子内，我们设定行高等于盒子的高度，就可以使文字居中。 CSS三大特性 层叠、继承、优先级、是我们学习CSS必须掌握的三个特性。 CSS层叠性 所谓层叠性是指多种CSS样式的叠加。1234567/*显示蓝色*/div&#123;color: red;&#125;div&#123;color:blue;&#125; 一般情况下，如果出现样式冲突，则会按照CSS书写的顺序，以最后的样式为准。 CSS继承性 继承性是指书写CSS样式表时，子标签会继承父标签的某些样式，如文本颜色和字号。想要设置一个可继承的属性，只需将它应用于父元素即可。注意：恰当的使用继承可以简化代码，降低CSS样式复杂性。但是，如果在网页中所有的元素都大量继承样式，那么判断样式的来源就会很困难，所以对于字体、文本属性等网页中通用的样式可以使用继承。例如，字体、字号、颜色、行距等可以在body元素中统一设置，然后通过继承影响文档中所有文本。并不是所有CSS属性都可以继承，例如，下面的属性就不具有继承性：边框、外边距、内边距、背景、定位、元素高属性。1234/*其他元素会继承font-size属性*/body&#123;font-size: 14px&#125; CSS优先级 定义CSS样式时，经常出现两个或更多规则应用在同一元素上，这时就会出现优先级问题。在考虑权重时，初学者还需要注意一些特殊情况，具体如下： 继承样式的权重为0。即使在嵌套结构当中，不管父元素样式的权重多大，被子元素继承时，他的权重都为0，也就是说子元素定义的样式会覆盖继承来的样式。行内样式优先。应用style属性的元素，其行内样式的权重非常高，可以理解为远大于100。总之，他拥有比上面提到的选择器都大的优先级。权重相同时，CSS遵循就近原则。也就是说靠近元素的样式具有最大的优先级，或者说排在最后的样式优先级最大。CSS定义了一个!important命令，该命令被赋予最大的优先级。也就是说不管权重如何以及样式位置的远近，!important都具有最大优先级。 CSS特殊性（Specificity） 关于CSS权重，我们需要一套计算公式来去计算，这个就是CSS Specificity，我们称为CSS特性或称非凡性，它是一个衡量CSS优先级的一个标准，具体规范如下： Specificity用一个四位的数字串（CSS2是三位）来表示，更像四个级别值从左到右，左面最大，一级大于一级，数位间没有进制，级别间不可超越。 继承或者* 的贡献值 0,0,0,0 每个元素（标签）贡献值为 0,0,0,1 每个类，伪类贡献值为 0,0,1,0 每个ID贡献值为 0,1,0,0 每个行内样式贡献值为 1,0,0,0 每个!important贡献值为 ∞无穷大 权重是可以叠加的比如的例子：12345div ul li -----&gt; 0,0,0,3.nav ul li -----&gt; 0,0,1,2a:hover -----&gt;0,0,1,1.nav a -----&gt; 0,0,1,1#nav p -----&gt; 0,1,0,1 注意： 数位没有进制，比如 0,0,0,5+0,0,0,5=0,0,0,10而不是0,0,1,0 继承的权重是0总结优先级： 使用了!important声明的规则。 内嵌在HTML元素的style属性里面的声明。 使用了ID选择器的规则。 使用了类选择器、属性选择器、伪元素和伪类选择器的规则。 使用了元素选择器的规则。 只包含一个通用选择器的规则。 同一类选择器则遵循就近原则。]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[耿大师作品集]]></title>
    <url>%2F2019%2F04%2F15%2F%E8%89%BA%E6%9C%AF%2F%E8%80%BF%E5%A4%A7%E5%B8%88%E4%BD%9C%E5%93%81%E9%9B%86%2F</url>
    <content type="text"><![CDATA[作品集综述 此作品集是笔者从耿大师处获取授权，将其过往作品收集珍藏于此。大师的作品有其独特鲜明的个人风格，相信读者在看过作品之后会有所体会。 大师简介 耿大师，字九日，1995年生，出生于龙城近郊。自幼聪慧过人，儿时就表现出对绘画、设计浓厚的兴趣。耿大师早在2007年甚至之前就已经开始从事作品创作，以绘画各种富有设计感的服装为主，笔者有幸在2007-2010年期间目睹过大师的创作过程和部分作品，当时就觉得惊为天人，此次并没有收集到这些作品然让笔者深感遗憾。之后大师转战线描，以其独到的理解、精湛的技法赋予线条生命，让线条与线条之间产生碰撞，升华出美感。近期，大师不满足于过往的成就尝试开辟新的领域，现已斥重金购买手绘板，并开始有部分作品问世。 近期作品手绘手绘-3 2019年4月22日，这是值得纪念的一天，耿大师出其不意地发布了她的最新作品——巴黎圣母院“森林”塔顶，该作品是耿大师根据一段18分钟的教学视频只需9个步骤，你就可以画出整个巴黎圣母院的“森林”塔顶所创作。短短十八分钟的学习，便可将其完美复现，耿大师的绘画功底与悟性果然深不可测。 手绘-2此作品是耿大师自画像（Ps：真人比这还美哦） 手绘-1此作品是耿大师手绘处女作 早期作品线描线描-1 线描-2 线描-3 线描-4 线描-5 线描-6 线描-7 线描-8 线描-9 画像画像-笔者 耿大师给笔者画的画像，emmmmm果然就算是耿大师的技巧也救不了我人丑啊]]></content>
      <categories>
        <category>艺术</category>
      </categories>
      <tags>
        <tag>绘画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML]]></title>
    <url>%2F2019%2F04%2F12%2F%E5%AD%A6%E4%B9%A0%2F%E5%89%8D%E7%AB%AF%2FHTML%2F</url>
    <content type="text"><![CDATA[HTML相关的知识点总结HTML相关知识的总结 HTML标签水平线标签1&lt;hr/&gt; 效果：在文字下方出现一行线，是单词 horizontal rule 的缩写 示例： 文本格式化标签粗体1&lt;strong&gt;&lt;/strong&gt; 效果：文字的斜体效果 示例：我是粗体 斜体1&lt;em&gt;&lt;/em&gt; 效果：文字的斜体效果 示例：我是斜体 删除线1&lt;del&gt;&lt;/del&gt; 效果：文字的删除线效果 示例：我是删除线 下划线1&lt;ins&gt;&lt;/ins&gt; 效果：文字的下划线效果 示例：我是下划线 图片标签1&lt;img src=&quot;图像URL&quot; /&gt; 属性 属性值 描述 src URL 图像路径 alt 文本 不能显示时的替换文本 title 文本 鼠标悬停时显示的内容 width 像素 设置图像宽度 height 像素 设置图像高度 链接标签1&lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt;&lt;/a&gt; target属性: 值 描述 _blank 在新窗口中打开被链接文档 _self 默认，在相同的框架中打开被链接文档 _parent 在父框架集中打开被链接文档 _top 在整个窗口中打开被链接文档 framename 在指定的框架中打开被链接文档 锚点定位 作用：适合较长的页面，点击某个关键词，迅速到达页面中该位置使用方法： 使用&lt;a href=&quot;#id名&quot;&gt;链接文本&lt;/a&gt;创建链接文本 使用相应的id名标注跳转目标位置 示例：链接文本 跳转位置 base标签1&lt;base target=&quot;_blank&quot; /&gt; base 设置整体链接的打开状态 特殊字符标签 特殊字符 描述 字符代码 空格符 &amp;nbsp; &copy; 版权 &amp;copy; 列表无序列表12345&lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt;&lt;/ul&gt; 示例： 无序列表 无序列表 无序列表 有序列表12345&lt;ol&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt;&lt;/ol&gt; 示例： 无序列表 无序列表 无序列表 自定义列表1234&lt;dl&gt; &lt;dt&gt;定义标题&lt;/dt&gt; &lt;dd&gt;定义描述、解释&lt;/dd&gt;&lt;/dl&gt; 效果：常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。使用：一般用于网站底部跳转链接列表。 示例： 定义标题 定义描述、解释 定义描述、解释 表格表格结构12345678910111213141516171819202122&lt;table&gt;&lt;caption&gt;&lt;/caption&gt; -------- 标题 &lt;thead&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 属性以及部分效果： 标题 属性名 含义 常用值 border 设置表格边框 像素值 cellspacing 设置单元格与单元格之间的空白距离 像素值(默认为2像素) cellpadding 设置单元格内容与边框间的空白距离 像素值(默认为1像素) width 设置表格宽度 像素值 height 设置表格宽度 像素值 align 设置表格在网页中的水平对齐方式 left、center、right 合并单元格 跨行合并：rowspan跨列合并：colspan 12345678910&lt;table&gt;&lt;tr&gt; &lt;td rowspan=2&gt;&lt;/td&gt; &lt;td colspan=2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 效果： 跨行合并 跨列合并 测试 测试 表单表单控件input 控件 input是单标签input有多种形状，通过type属性改变形状 属性 属性值 描述 type text 单行文本输入框 type password 密码输入框 type radio 单选按钮 type checkbox 复选按钮 type button 普通按钮 type submit 提交按钮 type reset 重置按钮 type image 图像形式的提交按钮 type file 文件域 name 用户自定义 空间名称 value 用户自定义 控件默认文本值 size 正整数 控件在页面中显示的宽度 checked checked 定义选择控件默认被选中的项 maxlength 正整数 控件允许输入的最多字符数 示例： label标签 作用：用于绑定一个表单元素，点击label标签的时候，被绑定的表单元素会获得输入焦点。用法： 用label直接包裹input 通过for、id格式绑定 1&lt;label&gt;输入框：&lt;input type=&quot;text&quot; name=&quot;文本框&quot; value=&quot;文本框&quot; /&gt;&lt;/label&gt; 输入框： 123&lt;label for=&quot;2&quot;&gt;输入框：&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;文本框&quot; value=&quot;文本框&quot; /&gt;&lt;input type=&quot;text&quot; id=&quot;2&quot; name=&quot;文本框&quot; value=&quot;文本框&quot; /&gt; 输入框： textarea控件(文本域)1&lt;textarea&gt;&lt;/textarea&gt; 示例： 请输入留言 下拉菜单12345&lt;select&gt;&lt;option&gt;北京&lt;option&gt;&lt;option selected=&quot;selected&quot;&gt;上海&lt;/option&gt;&lt;option&gt;广州&lt;option&gt;&lt;/select&gt; 示例： 北京上海广州 表单域123456&lt;form action=&quot;url地址&quot; method=&quot;提交方式&quot; name=&quot;表单控件&quot;&gt;&lt;p&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码：&lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;&quot;&gt;&lt;/p&gt;&lt;input type=&quot;submit&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;input type=&quot;reset&quot; name=&quot;&quot; id=&quot;&quot;&gt;&lt;/form&gt; 示例： 用户名：密&nbsp;&nbsp;&nbsp;&nbsp;码： HTML5 文档类型设定：&lt;!DOCTYPE html&gt;字符设定：&lt;meta charset=utf-8&gt; HTML5新增标签1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt;语意：定义页面头部、页眉&lt;/header&gt;&lt;nav&gt;语意：定义导航链接&lt;/nav&gt;&lt;footer&gt;语意：定义页面底部页脚&lt;/footer&gt;&lt;article&gt;语意：定义文章&lt;/article&gt;&lt;section&gt;语意：定义文档的节、区段&lt;/section&gt;&lt;aside&gt;语意：定义其所处内容之外的内容、侧边&lt;/aside&gt;&lt;fieldset&gt;&lt;/fieldset&gt;&lt;/body&gt;&lt;/html&gt; datalist标签 作用：定义输入框下拉列表，带提示功能。1234567&lt;input type=&quot;text&quot; value=&quot;输入明星&quot; list=&quot;star&quot;/&gt;&lt;datalist id=&quot;star&quot;&gt; ------ 定义选项列表，与input一起使用，通过list-id绑定 &lt;option&gt;刘德华&lt;/option&gt; &lt;option&gt;刘晓庆&lt;/option&gt; &lt;option&gt;刘若英&lt;/option&gt; &lt;option&gt;张学友&lt;/option&gt;&lt;/datalist&gt; 示例： 刘德华 刘晓庆 刘若英 张学友 fieldset标签 作用：将表单内的相关元素分组、打包，与legend搭配使用12345&lt;fieldset&gt; &lt;legend&gt;用户登录&lt;/legend&gt; 用户名：&lt;input type=&quot;text&quot;&gt;&lt;br&gt; 密码：&lt;input type=&quot;password&quot;&gt;&lt;/fieldset&gt; 示例： 用户登录 用户名： 密码： 新增的input type属性值 类型 示例 含义 email &lt;input type=&quot;email&quot;&gt; 输入邮箱格式 tel &lt;input type=&quot;tel&quot;&gt; 输入手机号码格式 url &lt;input type=&quot;url&quot;&gt; 输入url格式 number &lt;input type=&quot;number&quot;&gt; 输入数字格式 search &lt;input type=&quot;search&quot;&gt; 搜索框（体现语义化） range &lt;input type=&quot;range&quot;&gt; 自由拖动滑块 time &lt;input type=&quot;time&quot;&gt; 小时分钟 date &lt;input type=&quot;date&quot;&gt; 年月日 datetime &lt;input type=&quot;datetime&quot;&gt; 时间 month &lt;input type=&quot;month&quot;&gt; 月年 week &lt;input type=&quot;week&quot;&gt; 星期 年 示例： 新增input type属性值 email: tel: url: number: search: range: time: date: datetime-local: month: week: color: input新增的属性 属性 用法 含义 placeholder &lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot;&gt; 占位符提供可描述输入字段预期值的提示信息 autofocus &lt;input type=&quot;text&quot; autofocus&gt; 规定当前页面加载时input元素自动获取焦点 multiple &lt;input type=&quot;file&quot; multiple&gt; 多文件上传 autocomplete &lt;input type=&quot;text&quot; autocomplete=&quot;off&quot;&gt; 规定表单是否应该启用自动完成功能 有2个值，on代表记录已输入的值 用法：1.autocomplete 必须有提交按钮 2.表单必须给名字 required &lt;input type=&quot;text&quot; required&gt; 必填项 accesskey &lt;input type=&quot;text&quot; accesskey=&quot;s&quot;&gt; 规定激活（获取焦点）的快捷键，采用alt+字母形式 示例： placeholder: autofocus: 1.autocomplete 必须有提交按钮 2.表单必须给名字 autocomplete: required: accesskey: 多媒体标签 embed：标签定义嵌入内容audio：播放音频video：播放视频 embed标签1&lt;embde src=&apos;资源路径&apos;&gt;&lt;/embed&gt; audio标签 autoplay属性：可以自动播放controls属性：显示播放器loop属性：循环播放，填入正整数，-1表示无限循环 1234567为了浏览器兼容，需要做三种声音文件：ogg、mp3、wav&lt;audio autoplay controls loop=&quot;1&quot;&gt; &lt;source src=&quot;xxx.mp3&quot;&gt; &lt;source src=&quot;xxx.ogg&quot;&gt; &lt;source src=&quot;xxx.wav&quot;&gt; 您的浏览器不支持播放声音&lt;/audio&gt; 示例： 您的浏览器不支持播放声音 video标签 autoplay属性：可以自动播放controls属性：显示播放器loop属性：循环播放，填入正整数，-1表示无限循环width属性：设置播放器宽度height属性：设置播放器高度123456789为了浏览器兼容，需要做三种视频文件：ogg、mp4、webM&lt;video width=&quot;100px&quot; height=&quot;100px&quot; src=&quot;&quot; controls autoplay loop=&quot;1&quot;&gt; &lt;source src=&quot;xxx.opp&quot;&gt; &lt;source src=&quot;xxx.mp4&quot;&gt; &lt;source src=&quot;xxx.webM&quot;&gt; 您的浏览器不支持播放视频&lt;/video&gt;&lt;/body&gt;&lt;/html&gt; 为了浏览器兼容，需要做三种视频文件：ogg、mp4、webM 您的浏览器不支持播放视频]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[服务器代码更新操作命令]]></title>
    <url>%2F2019%2F04%2F04%2F%E5%85%AC%E5%8F%B8%2F%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81%E6%9B%B4%E6%96%B0%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[服务器代码更新操作命令有关服务器代码更新的命令（仅自用） 杂项12前端打包：yarn run webpack:prod 服务器代码更新root账户登录1ssh -l root -p 22 222.73.159.67 查看生产线程该操作需在root账户下进行1netstat -anp | grep 端口号（例如：8090、80） 杀死线程该操作需在root账户下进行1kill -9 线程号 （例如：126578） 打包以下命令都需要root账户下进行1./mvnw -Pprod package 启动程序以下命令都需要root账户下进行1nohup java -server -Xms2048m -Xmx2048m -jar hg-platform-0.0.1-SNAPSHOT.war &amp; 等上个指令执行完毕后执行1tail -f nohup.out 数据库操作登录mysql1mysql -u hguser -p drop 数据库1drop database hgplatform; 新建数据库1create database hgplatform default charset utf8mb4 collate utf8mb4_general_ci; Elasticsearch操作12清除Elasticsearch索引：curl -XDELETE http://localhost:9200/_all]]></content>
      <categories>
        <category>公司</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宝贝晚饭想吃啥？]]></title>
    <url>%2F2019%2F04%2F03%2F%E7%94%9F%E6%B4%BB%2Fdinner%2F</url>
    <content type="text"><![CDATA[姐姐妹妹站起来 如果不想出门 我给你点个外卖上去？ 例如吉野家-单人串点套餐宾果餐厅-澳洲牛排麻辣香锅-任性单人餐… 或者其他的宝贝挑一挑 如果想出门 现在外面有点冷啦，上衣一定要多套一件]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>秀恩爱</tag>
      </tags>
  </entry>
</search>
